//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbfirst_15323
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseContext : DbContext
    {
        public DatabaseContext()
            : base("name=DatabaseContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblstudent> tblstudents { get; set; }
        public virtual DbSet<tblcountry> tblcountries { get; set; }
        public virtual DbSet<tblstate> tblstates { get; set; }
    
        public virtual int sp_delete(Nullable<int> stnd_id)
        {
            var stnd_idParameter = stnd_id.HasValue ?
                new ObjectParameter("stnd_id", stnd_id) :
                new ObjectParameter("stnd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete", stnd_idParameter);
        }
    
        public virtual ObjectResult<sp_edit_Result> sp_edit(Nullable<int> stnd_id)
        {
            var stnd_idParameter = stnd_id.HasValue ?
                new ObjectParameter("stnd_id", stnd_id) :
                new ObjectParameter("stnd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_edit_Result>("sp_edit", stnd_idParameter);
        }
    
        public virtual ObjectResult<sp_getdata_Result> sp_getdata()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getdata_Result>("sp_getdata");
        }
    
        public virtual int sp_insert(string name, Nullable<int> age, Nullable<int> rollno, string email, string password, string city)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var rollnoParameter = rollno.HasValue ?
                new ObjectParameter("rollno", rollno) :
                new ObjectParameter("rollno", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert", nameParameter, ageParameter, rollnoParameter, emailParameter, passwordParameter, cityParameter);
        }
    
        public virtual int sp_update(Nullable<int> stnd_id, string name, Nullable<int> age, Nullable<int> rollno, string email, string password, string city)
        {
            var stnd_idParameter = stnd_id.HasValue ?
                new ObjectParameter("stnd_id", stnd_id) :
                new ObjectParameter("stnd_id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            var rollnoParameter = rollno.HasValue ?
                new ObjectParameter("rollno", rollno) :
                new ObjectParameter("rollno", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update", stnd_idParameter, nameParameter, ageParameter, rollnoParameter, emailParameter, passwordParameter, cityParameter);
        }
    
        public virtual ObjectResult<sp_Country_Result> sp_Country()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Country_Result>("sp_Country");
        }
    
        public virtual ObjectResult<sp_State_Result> sp_State(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_State_Result>("sp_State", cidParameter);
        }
    }
}
